[package]
name = "opa-util-core"
version.workspace = true
authors.workspace = true
edition.workspace = true

[dependencies]
async-backtrace.workspace = true
async-recursion.workspace = true
async-trait.workspace = true
cfg-if.workspace = true
derive_more.workspace = true
derivative.workspace = true
float-cmp.workspace = true
futures.workspace = true
hyper.workspace = true
hyper-rustls.workspace = true
lazy_static.workspace = true
opentelemetry.workspace = true
schemars.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
service-util = { workspace = true, features = ["client"] }
session-util.workspace = true
tokio = { workspace = true, features = ["macros", "rt", "sync", "time"] }
typed-builder.workspace = true
uuid.workspace = true

anyhow = { workspace = true, optional = true }
chrono = { workspace = true, optional = true }
color-eyre = { workspace = true, optional = true }
diesel = { workspace = true, optional = true }
diesel-async = { workspace = true, optional = true }
diesel-dynamic-schema = { workspace = true, optional = true }
diesel-util = { workspace = true, optional = true }
mongodb = { workspace = true, optional = true }
tracing = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }

[features]
default = []
anyhow = ["dep:anyhow", "diesel-util/anyhow", "service-util/anyhow"]
color-eyre = ["dep:color-eyre", "diesel-util/color-eyre", "service-util/color-eyre"]
db = ["diesel", "diesel-async", "diesel-util", "service-util/db"]
db-filter = ["db", "diesel-dynamic-schema"]
mongodb-tx-cache-backend = ["dep:chrono", "dep:mongodb"]
tracing = ["dep:tracing", "dep:tracing-opentelemetry", "diesel-util/tracing", "service-util/tracing"]
tracing-args = ["tracing", "diesel-util/tracing-args"]
tracing-full = ["tracing", "tracing-args", "tracing-ret", "diesel-util/tracing-full"]
tracing-ret = ["tracing", "diesel-util/tracing-ret"]
